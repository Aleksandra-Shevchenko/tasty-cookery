{"version":3,"sources":["webpack://test/./src/utils/constants.js","webpack://test/./src/components/slider.js","webpack://test/./src/components/FormValidator.js","webpack://test/./src/pages/index.js"],"names":["anchors","document","querySelectorAll","window","CustomEvent","event","params","bubbles","cancelable","detail","e","createEvent","initCustomEvent","SLIDER_TRANSITION_OFF","CLASS_CONTROL_HIDE","CLASS_ITEM_ACTIVE","CLASS_INDICATOR_ACTIVE","ChiefSlider","selector","config","$root","querySelector","key","this","_$root","_$wrapper","_$items","_$itemList","_$controlPrev","_$controlNext","_$indicatorList","_minOrder","_maxOrder","_$itemWithMinOrder","_$itemWithMaxOrder","_minTranslate","_maxTranslate","_direction","_balancingItemsFlag","_activeItems","_transform","_hasSwipeState","__swipeStartPos","_intervalId","_config","loop","autoplay","interval","refresh","swipe","hasOwnProperty","$itemList","widthItem","offsetWidth","widthWrapper","itemsInVisibleArea","Math","round","_widthItem","_widthWrapper","_itemsInVisibleArea","_transformStep","i","length","dataset","index","order","translate","push","count","style","transform","__refreshExtremeValues","classList","add","_setActiveClass","_addEventListener","_updateIndicators","_autoplay","prototype","$items","onSwipeStart","type","search","touches","_swipeStartPos","clientX","onSwipeEnd","changedTouches","diffPos","_move","addEventListener","$target","target","contains","preventDefault","slide","slideTo","parseInt","_moveTo","bind","requestAnimationFrame","_refresh","_balancingItems","visibilityState","_$itemByMinOrder","_$itemByMaxOrder","$item","$wrapperClientRect","getBoundingClientRect","widthHalfItem","width","wrapperLeft","left","$min","right","concat","wrapperRight","$max","activeItems","indexOf","remove","$indicatorList","step","endTransformValue","newIndex","activeIndex","dispatchEvent","_moveToNext","_moveToPrev","nearestIndex","diff","$indicator","abs","action","clearInterval","setInterval","position","next","prev","moveTo","FormValidator","popupSelector","_formSelector","formSelector","_inputSelector","inputSelector","_submitBtnSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_formElement","inputElement","errorMessage","errorElement","id","textContent","validity","valid","_hideInputError","_showInputError","validationMessage","inputList","some","buttonElement","_hasInvalidInput","setAttribute","removeAttribute","Array","from","_toggleButtonState","forEach","_checkInputValidity","form","inputsArr","_setEventListeners","slidersEl","len","enableValidation","anchor","blockID","getAttribute","substring","getElementById","scrollIntoView","behavior","block"],"mappings":"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","file":"index.js","sourcesContent":["\n// объект параметров для валидации форм\nconst validationObject = {\n  formSelector: '.footer__form',\n  inputSelector: '.footer__input',\n  submitButtonSelector: '.footer__btn',\n  inactiveButtonClass: 'footer__btn_inactive',\n  inputErrorClass: 'footer__input-error',\n  errorClass: 'footer__input-error_active',\n};\n\n// селекторы для создания экземпляров классов\nconst selectorObj = {\n  form: '.footer',\n};\n\n// все ссылки страницы\nconst anchors = document.querySelectorAll('a[href*=\"#\"]');\n\nexport {\n  validationObject,\n  selectorObj,\n  anchors\n};\n","/**\n * ChiefSlider by Itchief v2.0.0 (https://github.com/itchief/ui-components/tree/master/simple-adaptive-slider)\n * Copyright 2020 - 2021 Alexander Maltsev\n * Licensed under MIT (https://github.com/itchief/ui-components/blob/master/LICENSE)\n */\n\n(function() {\n  if (typeof window.CustomEvent === 'function' ) return false;\n  function CustomEvent(event, params) {\n    params = params || {bubbles: false, cancelable: false, detail: null};\n    var e = document.createEvent('CustomEvent');\n    e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return e;\n  }\n  window.CustomEvent = CustomEvent;\n})();\n\nvar WRAPPER_SELECTOR = '.slider__wrapper';\nvar ITEMS_SELECTOR = '.slider__items';\nvar ITEM_SELECTOR = '.slider__item';\nvar CONTROL_CLASS = 'slider__control';\n\n/* var ITEM_CLASS_ACTIVE = 'slider__item_active';\nvar CONTROL_SELECTOR = '.slider__control';\nvar CONTROL_CLASS_SHOW = 'slider__control_show';\n// индикаторы\nvar INDICATOR_WRAPPER_ELEMENT = 'ol';\nvar INDICATOR_WRAPPER_CLASS = 'slider__indicators';\nvar INDICATOR_ITEM_ELEMENT = 'li';\nvar INDICATOR_ITEM_CLASS = 'slider__indicator';\nvar INDICATOR_ITEM_CLASS_ACTIVE = 'slider__indicator_active';\n// порог для переключения слайда (40%)\nvar POS_THRESHOLD = 40;\n// класс для отключения transition\nvar TRANSITION_NONE = 'transition-none';*/\n\nvar SELECTOR_PREV = '.slider__control[data-slide=\"prev\"]';\nvar SELECTOR_NEXT = '.slider__control[data-slide=\"next\"]';\nvar SELECTOR_INDICATOR = '.slider__indicators>li';\nvar SLIDER_TRANSITION_OFF = 'slider_disable-transition';\nvar CLASS_CONTROL_HIDE = 'slider__control_hide';\nvar CLASS_ITEM_ACTIVE = 'slider__item_active';\nvar CLASS_INDICATOR_ACTIVE = 'active';\n\nexport function ChiefSlider(selector, config) {\n  // элементы слайдера\n  var $root = typeof selector === 'string' ?\n    document.querySelector(selector) : selector;\n  this._$root = $root;\n  this._$wrapper = $root.querySelector(WRAPPER_SELECTOR);\n  this._$items = $root.querySelector(ITEMS_SELECTOR);\n  this._$itemList = $root.querySelectorAll(ITEM_SELECTOR);\n  this._$controlPrev = $root.querySelector(SELECTOR_PREV);\n  this._$controlNext = $root.querySelector(SELECTOR_NEXT);\n  this._$indicatorList = $root.querySelectorAll(SELECTOR_INDICATOR);\n  // экстремальные значения слайдов\n  this._minOrder = 0;\n  this._maxOrder = 0;\n  this._$itemWithMinOrder = null;\n  this._$itemWithMaxOrder = null;\n  this._minTranslate = 0;\n  this._maxTranslate = 0;\n  // направление смены слайдов (по умолчанию)\n  this._direction = 'next';\n  // determines whether the position of item needs to be determined\n  this._balancingItemsFlag = false;\n  this._activeItems = [];\n  // текущее значение трансформации\n  this._transform = 0;\n  // swipe параметры\n  this._hasSwipeState = false;\n  this.__swipeStartPos = 0;\n  // slider properties\n  this._transform = 0; // текущее значение трансформации\n  this._intervalId = null;\n  // configuration of the slider\n  this._config = {\n    loop: true,\n    autoplay: false,\n    interval: 5000,\n    refresh: true,\n    swipe: true,\n  };\n  for (var key in config) {\n    if (this._config.hasOwnProperty(key)) {\n      this._config[key] = config[key];\n    }\n  }\n  // create some constants\n  var $itemList = this._$itemList;\n  var widthItem = $itemList[0].offsetWidth;\n  var widthWrapper = this._$wrapper.offsetWidth;\n  var itemsInVisibleArea = Math.round(widthWrapper / widthItem);\n  // initial setting properties\n  this._widthItem = widthItem;\n  this._widthWrapper = widthWrapper;\n  this._itemsInVisibleArea = itemsInVisibleArea;\n  this._transformStep = 100 / itemsInVisibleArea;\n  // initial setting order and translate items\n  for (var i = 0, length = $itemList.length; i < length; i++) {\n    $itemList[i].dataset.index = i;\n    $itemList[i].dataset.order = i;\n    $itemList[i].dataset.translate = 0;\n    if (i < itemsInVisibleArea) {\n      this._activeItems.push(i);\n    }\n  }\n  if (this._config.loop) {\n    // перемещаем последний слайд перед первым\n    var count = $itemList.length - 1;\n    var translate = -$itemList.length * 100;\n    $itemList[count].dataset.order = -1;\n    $itemList[count].dataset.translate = -$itemList.length * 100;\n    $itemList[count].style.transform = 'translateX(' + translate + '%)';\n    this.__refreshExtremeValues();\n  } else {\n    if (this._$controlPrev) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n  }\n  this._setActiveClass();\n  this._addEventListener();\n  this._updateIndicators();\n  this._autoplay();\n}\n\n// подключения обработчиков событий для слайдера\nChiefSlider.prototype._addEventListener = function() {\n  var $root = this._$root;\n  var $items = this._$items;\n  var config = this._config;\n  function onClick(e) {\n    var $target = e.target;\n    this._autoplay('stop');\n    if ($target.classList.contains(CONTROL_CLASS)) {\n      e.preventDefault();\n      this._direction = $target.dataset.slide;\n      this._move();\n    } else if ($target.dataset.slideTo) {\n      var index = parseInt($target.dataset.slideTo);\n      this._moveTo(index);\n    }\n    if (this._config.loop) {\n      this._autoplay();\n    }\n  }\n  function onMouseEnter(e) {\n    this._autoplay('stop');\n  }\n  function onMouseLeave(e) {\n    this._autoplay();\n  }\n  function onTransitionStart() {\n    if (this._balancingItemsFlag) {\n      return;\n    }\n    this._balancingItemsFlag = true;\n    window.requestAnimationFrame(this._balancingItems.bind(this));\n  }\n  function onTransitionEnd() {\n    this._balancingItemsFlag = false;\n  }\n  function onResize() {\n    window.requestAnimationFrame(this._refresh.bind(this));\n  }\n  function onSwipeStart(e) {\n    this._autoplay('stop');\n    var event = e.type.search('touch') === 0 ? e.touches[0] : e;\n    this._swipeStartPos = event.clientX;\n    this._hasSwipeState = true;\n  }\n  function onSwipeEnd(e) {\n    if (!this._hasSwipeState) {\n      return;\n    }\n    var event = e.type.search('touch') === 0 ? e.changedTouches[0] : e;\n    var diffPos = this._swipeStartPos - event.clientX;\n    if (diffPos > 50) {\n      this._direction = 'next';\n      this._move();\n    } else if (diffPos < -50) {\n      this._direction = 'prev';\n      this._move();\n    }\n    this._hasSwipeState = false;\n    if (this._config.loop) {\n      this._autoplay();\n    }\n  }\n  function onDragStart(e) {\n    e.preventDefault();\n  }\n  function onVisibilityChange() {\n    if (document.visibilityState === 'hidden') {\n      this._autoplay('stop');\n    } else if (document.visibilityState === 'visible') {\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n  }\n\n  $root.addEventListener('click', onClick.bind(this));\n  $root.addEventListener('mouseenter', onMouseEnter.bind(this));\n  $root.addEventListener('mouseleave', onMouseLeave.bind(this));\n  // on resize\n  if (config.refresh) {\n    window.addEventListener('resize', onResize.bind(this));\n  }\n  // on transitionstart and transitionend\n  if (config.loop) {\n    $items.addEventListener('transition-start', onTransitionStart.bind(this));\n    $items.addEventListener('transitionend', onTransitionEnd.bind(this));\n  }\n  // on touchstart and touchend\n  if (config.swipe) {\n    $root.addEventListener('touchstart', onSwipeStart.bind(this));\n    $root.addEventListener('mousedown', onSwipeStart.bind(this));\n    document.addEventListener('touchend', onSwipeEnd.bind(this));\n    document.addEventListener('mouseup', onSwipeEnd.bind(this));\n  }\n  $root.addEventListener('dragstart', onDragStart.bind(this));\n  // при изменении активности вкладки\n  document.addEventListener('visibilitychange', onVisibilityChange.bind(this));\n};\n\n// update values of extreme properties\nChiefSlider.prototype.__refreshExtremeValues = function() {\n  var $itemList = this._$itemList;\n  this._minOrder = +$itemList[0].dataset.order;\n  this._maxOrder = this._minOrder;\n  this._$itemByMinOrder = $itemList[0];\n  this._$itemByMaxOrder = $itemList[0];\n  this._minTranslate = +$itemList[0].dataset.translate;\n  this._maxTranslate = this._minTranslate;\n  for (var i = 0, length = $itemList.length; i < length; i++) {\n    var $item = $itemList[i];\n    var order = +$item.dataset.order;\n    if (order < this._minOrder) {\n      this._minOrder = order;\n      this._$itemByMinOrder = $item;\n      this._minTranslate = +$item.dataset.translate;\n    } else if (order > this._maxOrder) {\n      this._maxOrder = order;\n      this._$itemByMaxOrder = $item;\n      this._minTranslate = +$item.dataset.translate;\n    }\n  }\n};\n\n// update position of item\nChiefSlider.prototype._balancingItems = function() {\n  if (!this._balancingItemsFlag) {\n    return;\n  }\n  var $wrapper = this._$wrapper;\n  var $wrapperClientRect = $wrapper.getBoundingClientRect();\n  var widthHalfItem = $wrapperClientRect.width / this._itemsInVisibleArea / 2;\n  var count = this._$itemList.length;\n  var translate;\n  var clientRect;\n  if (this._direction === 'next') {\n    var wrapperLeft = $wrapperClientRect.left;\n    var $min = this._$itemByMinOrder;\n    translate = this._minTranslate;\n    clientRect = $min.getBoundingClientRect();\n    if (clientRect.right < wrapperLeft - widthHalfItem) {\n      $min.dataset.order = this._minOrder + count;\n      translate += count * 100;\n      $min.dataset.translate = translate;\n      $min.style.transform = 'translateX('.concat(translate, '%)');\n      // update values of extreme properties\n      this.__refreshExtremeValues();\n    }\n  } else {\n    var wrapperRight = $wrapperClientRect.right;\n    var $max = this._$itemByMaxOrder;\n    translate = this._maxTranslate;\n    clientRect = $max.getBoundingClientRect();\n    if (clientRect.left > wrapperRight + widthHalfItem) {\n      $max.dataset.order = this._maxOrder - count;\n      translate -= count * 100;\n      $max.dataset.translate = translate;\n      $max.style.transform = 'translateX('.concat(translate, '%)');\n      // update values of extreme properties\n      this.__refreshExtremeValues();\n    }\n  }\n  // updating...\n  requestAnimationFrame(this._balancingItems.bind(this));\n};\n\n// _setActiveClass\nChiefSlider.prototype._setActiveClass = function() {\n  var activeItems = this._activeItems;\n  var $itemList = this._$itemList;\n  for (var i = 0, length = $itemList.length; i < length; i++) {\n    var $item = $itemList[i];\n    var index = +$item.dataset.index;\n    if (activeItems.indexOf(index) > -1) {\n      $item.classList.add(CLASS_ITEM_ACTIVE);\n    } else {\n      $item.classList.remove(CLASS_ITEM_ACTIVE);\n    }\n  }\n};\n\n// _updateIndicators\nChiefSlider.prototype._updateIndicators = function() {\n  var $indicatorList = this._$indicatorList;\n  var $itemList = this._$itemList;\n  if (!$indicatorList.length) {\n    return;\n  }\n  for (var index = 0, length = $itemList.length; index < length; index++) {\n    var $item = $itemList[index];\n    if ($item.classList.contains(CLASS_ITEM_ACTIVE)) {\n      $indicatorList[index].classList.add(CLASS_INDICATOR_ACTIVE);\n    } else {\n      $indicatorList[index].classList.remove(CLASS_INDICATOR_ACTIVE);\n    }\n  }\n};\n\n// move slides\nChiefSlider.prototype._move = function() {\n  var step = this._direction ===\n   'next' ? -this._transformStep : this._transformStep;\n  var transform = this._transform + step;\n  if (!this._config.loop) {\n    var endTransformValue =\n      this._transformStep * (this._$itemList.length - this._itemsInVisibleArea);\n    transform = Math.round(transform * 10) / 10;\n    if (transform < -endTransformValue || transform > 0) {\n      return;\n    }\n    this._$controlPrev.classList.remove(CLASS_CONTROL_HIDE);\n    this._$controlNext.classList.remove(CLASS_CONTROL_HIDE);\n    if (transform === -endTransformValue) {\n      this._$controlNext.classList.add(CLASS_CONTROL_HIDE);\n    } else if (transform === 0) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n  }\n  var activeIndex = [];\n  var i = 0;\n  var length;\n  var index;\n  var newIndex;\n  if (this._direction === 'next') {\n    for (i = 0, length = this._activeItems.length; i < length; i++) {\n      index = this._activeItems[i];\n      newIndex = ++index;\n      if (newIndex > this._$itemList.length - 1) {\n        newIndex -= this._$itemList.length;\n      }\n      activeIndex.push(newIndex);\n    }\n  } else {\n    for (i = 0, length = this._activeItems.length; i < length; i++) {\n      index = this._activeItems[i];\n      newIndex = --index;\n      if (newIndex < 0) {\n        newIndex += this._$itemList.length;\n      }\n      activeIndex.push(newIndex);\n    }\n  }\n  this._activeItems = activeIndex;\n  this._setActiveClass();\n  this._updateIndicators();\n  this._transform = transform;\n  this._$items.style.transform = 'translateX(' + transform + '%)';\n  this._$items.dispatchEvent(new CustomEvent('transition-start', {bubbles: true}));\n};\n\n// _moveToNext\nChiefSlider.prototype._moveToNext = function() {\n  this._direction = 'next';\n  this._move();\n};\n\n// _moveToPrev\nChiefSlider.prototype._moveToPrev = function() {\n  this._direction = 'prev';\n  this._move();\n};\n\n// _moveTo\nChiefSlider.prototype._moveTo = function(index) {\n  var $indicatorList = this._$indicatorList;\n  var nearestIndex = null;\n  var diff = null;\n  var i;\n  var length;\n  for (i = 0, length = $indicatorList.length; i < length; i++) {\n    var $indicator = $indicatorList[i];\n    if ($indicator.classList.contains(CLASS_INDICATOR_ACTIVE)) {\n      var slideTo = +$indicator.dataset.slideTo;\n      if (diff === null) {\n        nearestIndex = slideTo;\n        diff = Math.abs(index - nearestIndex);\n      } else {\n        if (Math.abs(index - slideTo) < diff) {\n          nearestIndex = slideTo;\n          diff = Math.abs(index - nearestIndex);\n        }\n      }\n    }\n  }\n  diff = index - nearestIndex;\n  if (diff === 0) {\n    return;\n  }\n  this._direction = diff > 0 ? 'next' : 'prev';\n  for (i = 1; i <= Math.abs(diff); i++) {\n    this._move();\n  }\n};\n\n// _autoplay\nChiefSlider.prototype._autoplay = function(action) {\n  if (!this._config.autoplay) {\n    return;\n  }\n  if (action === 'stop') {\n    clearInterval(this._intervalId);\n    this._intervalId = null;\n    return;\n  }\n  if (this._intervalId === null) {\n    this._intervalId = setInterval(\n        function() {\n          this._direction = 'next';\n          this._move();\n        }.bind(this),\n        this._config.interval\n    );\n  }\n};\n\n// _refresh\nChiefSlider.prototype._refresh = function() {\n  // create some constants\n  var $itemList = this._$itemList;\n  var widthItem = $itemList[0].offsetWidth;\n  var widthWrapper = this._$wrapper.offsetWidth;\n  var itemsInVisibleArea = Math.round(widthWrapper / widthItem);\n\n  if (itemsInVisibleArea === this._itemsInVisibleArea) {\n    return;\n  }\n\n  this._autoplay('stop');\n\n  this._$items.classList.add(SLIDER_TRANSITION_OFF);\n  this._$items.style.transform = 'translateX(0)';\n\n  // setting properties after reset\n  this._widthItem = widthItem;\n  this._widthWrapper = widthWrapper;\n  this._itemsInVisibleArea = itemsInVisibleArea;\n  this._transform = 0;\n  this._transformStep = 100 / itemsInVisibleArea;\n  this._balancingItemsFlag = false;\n  this._activeItems = [];\n\n  // setting order and translate items after reset\n  for (var i = 0, length = $itemList.length; i < length; i++) {\n    var $item = $itemList[i];\n    var position = i;\n    $item.dataset.index = position;\n    $item.dataset.order = position;\n    $item.dataset.translate = 0;\n    $item.style.transform = 'translateX(0)';\n    if (position < itemsInVisibleArea) {\n      this._activeItems.push(position);\n    }\n  }\n\n  this._setActiveClass();\n  this._updateIndicators();\n  window.requestAnimationFrame(\n      function() {\n        this._$items.classList.remove(SLIDER_TRANSITION_OFF);\n      }.bind(this)\n  );\n\n  // hide prev arrow for non-infinite slider\n  if (!this._config.loop) {\n    if (this._$controlPrev) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n    return;\n  }\n\n  // translate last item before first\n  var count = $itemList.length - 1;\n  var translate = -$itemList.length * 100;\n  $itemList[count].dataset.order = -1;\n  $itemList[count].dataset.translate = -$itemList.length * 100;\n  $itemList[count].style.transform = 'translateX('.concat(translate, '%)');\n  // update values of extreme properties\n  this.__refreshExtremeValues();\n  // calling _autoplay\n  this._autoplay();\n};\n\n// public\nChiefSlider.prototype.next = function() {\n  this._moveToNext();\n};\nChiefSlider.prototype.prev = function() {\n  this._moveToPrev();\n};\nChiefSlider.prototype.moveTo = function(index) {\n  this._moveTo(index);\n};\nChiefSlider.prototype.refresh = function() {\n  this._refresh();\n};\n","// --- КЛАСС ВАЛИДАЦИИ ФОРМ ---\n\nexport default class FormValidator {\n  constructor(config, popupSelector) {\n    this._formSelector = config.formSelector;\n    this._inputSelector = config.inputSelector;\n    this._submitBtnSelector = config.submitButtonSelector;\n    this._inactiveButtonClass = config.inactiveButtonClass;\n    this._inputErrorClass = config.inputErrorClass;\n    this._errorClass = config.errorClass;\n    this._formElement = document.querySelector(popupSelector);\n  }\n\n  //метод появления сообщения об ошибке\n  _showInputError(inputElement, errorMessage) {\n    const errorElement = this._formElement.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.add(this._inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._errorClass);\n  }\n\n  //метод скрытия сообщения об ошибке\n  _hideInputError(inputElement) {\n    const errorElement = this._formElement.querySelector(`#${inputElement.id}-error`);\n\n    inputElement.classList.remove(this._inputErrorClass);\n    errorElement.classList.remove(this._errorClass);\n    errorElement.textContent = '';\n  }\n\n  //метод управления сообщениями об ошибках\n  _checkInputValidity(inputElement) {\n    if(inputElement.validity.valid) {\n      this._hideInputError(inputElement);\n    } else {\n      this._showInputError(inputElement, inputElement.validationMessage);\n    }\n  }\n\n  //метод проверки на невалидные поля\n  _hasInvalidInput(inputList) {\n    return inputList.some(inputElement => {\n      return !inputElement.validity.valid;\n    });\n  }\n\n  //метод включения/выключения кнопки submit в форме\n  _toggleButtonState(inputList, buttonElement) {\n    if(this._hasInvalidInput(inputList)) {\n      buttonElement.setAttribute('disabled', true);\n      buttonElement.classList.add(this._inactiveButtonClass);\n    } else {\n      buttonElement.removeAttribute('disabled');\n      buttonElement.classList.remove(this._inactiveButtonClass);\n    }\n  }\n\n  //метод добавления слушателей для каждого поля ввода\n  _setEventListeners() {\n    const inputList = Array.from(this._formElement.querySelectorAll(this._inputSelector));\n    const buttonElement = this._formElement.querySelector(this._submitBtnSelector);\n    this._toggleButtonState(inputList, buttonElement);\n\n    inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', () => {\n        this._checkInputValidity(inputElement);\n        this._toggleButtonState(inputList, buttonElement);\n      });\n    });\n  }\n\n  //метод сброса результатов проверки формы\n  resetValidationState() {\n    const form = this._formElement.querySelector(this._formSelector);\n    const inputsArr = Array.from(form.querySelectorAll(this._inputSelector));\n    const buttonElement = form.querySelector(this._submitBtnSelector);\n\n    this._toggleButtonState(inputsArr, buttonElement);\n\n    inputsArr.forEach((inputElement) => {\n      this._hideInputError(inputElement);\n    });\n  }\n\n  //метод включения валидации\n  enableValidation() {\n    this._setEventListeners();\n  }\n}\n","import \"./index.css\";\nimport {\n  validationObject,\n  selectorObj,\n  anchors,\n} from \"../utils/constants.js\";\n\nimport { ChiefSlider } from \"../components/slider.js\";\nimport FormValidator from \"../components/FormValidator.js\";\n\n// создаем экземпляры слайдеров\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const slidersEl = document.querySelectorAll(\".slider\");\n  for (let i = 0, len = slidersEl.length; i < len; i++) {\n    // инициализируем каждый элемент в качестве слайдера\n    new ChiefSlider(slidersEl[i], {\n      loop: false,\n      autoplay: true,\n      interval: 5000,\n      refresh: true,\n    });\n  }\n});\n\n// создаем экземпляры класса FormValidator и включаем валидацию формы\nconst validForm = new FormValidator(validationObject, selectorObj.form);\nvalidForm.enableValidation();\n\n// реализуем плавный скролл до формы по нажатиям на ссылки\nfor (let anchor of anchors) {\n  anchor.addEventListener(\"click\", function (e) {\n    e.preventDefault();\n    const blockID = anchor.getAttribute(\"href\").substring(1);\n    document.getElementById(blockID).scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n    });\n  })\n};\n"],"sourceRoot":""}